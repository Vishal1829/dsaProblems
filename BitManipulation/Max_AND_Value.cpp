#include <bits/stdc++.h>
using namespace std;

/*
Given an array arr[] of N positive elements. The task is to find the Maximum AND Value generated by any pair of elements from the array.
Note: AND is bitwise '&' operator.
*/
/*
Logic:- find the max element as the answer will contain that many bits. Then start from left and 
turn the bit and check for that bit whether in the given array do we have more than one elements
which contain this no. of bits with the same positions by checking -> (arr[i] & x) == x. If we get
more than 1 elements then we can surely keep this bit turn on otherwise turn off this bit as we in
the array we don't have more than 1 elements which have this bit turn on.
*/

int maxBitwiseANDValue(vector<int> &v) {
    int maxVal=*max_element(v.begin(),v.end());
	    int cntBits=0;
	    while(maxVal){
	        cntBits++;
	        maxVal >>= 1;
	    }
	    int maxAndVal=0;
	    while(cntBits>=0){
	        maxAndVal |= (1<<cntBits);
	        
	        int cntValues=0;
	        for(int i=0;i<v.size();i++){
	            if((v[i] & maxAndVal) == maxAndVal)
	              cntValues++;
	        }
	        if(cntValues < 2){
	          maxAndVal &= ~(1<<cntBits);
	        }
	        cntBits--;
	    }
	    return maxAndVal;
}

int main() {
    vector<int> v={2,12,8,16};
    cout<<maxBitwiseANDValue(v);
}